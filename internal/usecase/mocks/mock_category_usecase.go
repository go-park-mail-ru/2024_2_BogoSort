// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/category.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	entity "github.com/go-park-mail-ru/2024_2_BogoSort/internal/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockCategoryUseCase is a mock of CategoryUseCase interface.
type MockCategoryUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockCategoryUseCaseMockRecorder
}

// MockCategoryUseCaseMockRecorder is the mock recorder for MockCategoryUseCase.
type MockCategoryUseCaseMockRecorder struct {
	mock *MockCategoryUseCase
}

// NewMockCategoryUseCase creates a new mock instance.
func NewMockCategoryUseCase(ctrl *gomock.Controller) *MockCategoryUseCase {
	mock := &MockCategoryUseCase{ctrl: ctrl}
	mock.recorder = &MockCategoryUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCategoryUseCase) EXPECT() *MockCategoryUseCaseMockRecorder {
	return m.recorder
}

// GetCategories mocks base method.
func (m *MockCategoryUseCase) GetCategories() ([]*entity.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCategories")
	ret0, _ := ret[0].([]*entity.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCategories indicates an expected call of GetCategories.
func (mr *MockCategoryUseCaseMockRecorder) GetCategories() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCategories", reflect.TypeOf((*MockCategoryUseCase)(nil).GetCategories))
}
