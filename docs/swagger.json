{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/adverts": {
            "get": {
                "description": "Fetch a list of all adverts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Retrieve all adverts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of adverts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Advert"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid limit or offset",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve adverts",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new advert to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Create a new advert",
                "parameters": [
                    {
                        "description": "Advert data",
                        "name": "advert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Advert"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Advert created",
                        "schema": {
                            "$ref": "#/definitions/dto.Advert"
                        }
                    },
                    "400": {
                        "description": "Invalid advert data",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create advert",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/cart/{cartId}": {
            "get": {
                "description": "Fetch a list of adverts in the specified cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Retrieve adverts by cart ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cartId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of adverts in cart",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Advert"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid cart ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve adverts by cart ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/category/{categoryId}": {
            "get": {
                "description": "Fetch a list of adverts associated with a specific category ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Retrieve adverts by category ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of adverts by category ID",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Advert"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid category ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve adverts by category ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/seller/{sellerId}": {
            "get": {
                "description": "Fetch a list of adverts associated with a specific seller ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Retrieve adverts by seller ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Seller ID",
                        "name": "sellerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of adverts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Advert"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid seller ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve adverts by seller ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/user/{userId}/saved": {
            "get": {
                "description": "Fetch a list of saved adverts associated with a specific user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Retrieve saved adverts by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of saved adverts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Advert"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve saved adverts by user ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/{advertId}": {
            "get": {
                "description": "Fetch an advert based on its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Retrieve an advert by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advert ID",
                        "name": "advertId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advert details",
                        "schema": {
                            "$ref": "#/definitions/dto.Advert"
                        }
                    },
                    "400": {
                        "description": "Invalid advert ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Advert not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve advert by ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify the details of an existing advert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Update an existing advert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advert ID",
                        "name": "advertId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated advert data",
                        "name": "advert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Advert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advert updated successfully"
                    },
                    "400": {
                        "description": "Invalid advert data",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Advert not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update advert",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove an advert from the system using its ID",
                "tags": [
                    "adverts"
                ],
                "summary": "Delete an advert by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advert ID",
                        "name": "advertId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Advert deleted"
                    },
                    "400": {
                        "description": "Invalid advert ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Advert not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete advert",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/{advertId}/image": {
            "put": {
                "description": "Upload an image associated with an advert by its ID",
                "tags": [
                    "adverts"
                ],
                "summary": "Upload an image for an advert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advert ID",
                        "name": "advertId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image uploaded",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid advert ID or file not attached",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to upload image",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/{advertId}/status": {
            "put": {
                "description": "Change the status of an advert by its ID",
                "tags": [
                    "adverts"
                ],
                "summary": "Update the status of an advert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advert ID",
                        "name": "advertId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advert status updated"
                    },
                    "400": {
                        "description": "Invalid advert ID or status",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Advert not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update advert status",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/categories": {
            "get": {
                "description": "Retrieve a list of all categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get all categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/static/{staticId}": {
            "get": {
                "description": "Get a static file by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "static"
                ],
                "summary": "Get static file by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Static file ID",
                        "name": "staticId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL of the static file",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid static ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Static file not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get static file",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Allows a user to log into the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login data",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SessionID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials or unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Allows the user to log out of the system by deleting their session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "You have successfully logged out",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing cookie",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "description": "Returns information about the currently authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get current user information",
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/password": {
            "post": {
                "description": "Allows a user to change their password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "description": "Password change data",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/profile": {
            "put": {
                "description": "Allows a user to update their profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "Profile data",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/profile/{user_id}": {
            "get": {
                "description": "Returns user information by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile",
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/seller/{seller_id}": {
            "get": {
                "description": "Возвращает информацию о продавце по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Продавцы"
                ],
                "summary": "Получение продавца по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID продавца",
                        "name": "seller_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о продавце",
                        "schema": {
                            "$ref": "#/definitions/entity.Seller"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Продавец не найден",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Creates a new user in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "Registration data",
                        "name": "signup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Signup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SessionID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request or user already exists",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Advert": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "has_delivery": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "seller_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/dto.AdvertStatus"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.AdvertStatus": {
            "type": "string",
            "enum": [
                "active"
            ],
            "x-enum-varnames": [
                "AdvertStatusActive"
            ]
        },
        "dto.Login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.Signup": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.UpdatePassword": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "dto.User": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string",
                    "default": "00000000-0000-0000-0000-000000000000"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "default": "active"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "entity.Seller": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.ErrResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}