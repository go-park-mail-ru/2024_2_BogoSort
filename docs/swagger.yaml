definitions:
  handlers.AuthData:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.LoginCredentials:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  responses.AuthResponse:
    properties:
      email:
        type: string
      is_auth:
        type: boolean
      session_id:
        type: string
    type: object
  responses.ErrResponse:
    properties:
      code:
        type: integer
      status:
        type: string
    type: object
  storage.Advert:
    properties:
      id:
        type: integer
      image_url:
        type: string
      location:
        type: string
      price:
        type: integer
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/adverts:
    get:
      description: Get a list of all adverts
      produces:
      - application/json
      responses:
        "200":
          description: List of adverts
          schema:
            items:
              $ref: '#/definitions/storage.Advert'
            type: array
        "500":
          description: Failed to get adverts
          schema:
            $ref: '#/definitions/responses.ErrResponse'
      summary: Get all adverts
      tags:
      - adverts
    post:
      consumes:
      - application/json
      description: Add a new advert to the list
      parameters:
      - description: Advert data
        in: body
        name: advert
        required: true
        schema:
          $ref: '#/definitions/storage.Advert'
      produces:
      - application/json
      responses:
        "200":
          description: Advert added successfully
          schema:
            $ref: '#/definitions/storage.Advert'
        "400":
          description: Failed to add advert
          schema:
            $ref: '#/definitions/responses.ErrResponse'
      summary: Add a new advert
      tags:
      - adverts
  /api/v1/adverts/{id}:
    delete:
      description: Delete an advert by its ID
      parameters:
      - description: Advert ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Advert deleted successfully
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/responses.ErrResponse'
        "500":
          description: Failed to delete advert
          schema:
            $ref: '#/definitions/responses.ErrResponse'
      summary: Delete an advert
      tags:
      - adverts
    get:
      description: Get a single advert by its ID
      parameters:
      - description: Advert ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Advert details
          schema:
            $ref: '#/definitions/storage.Advert'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/responses.ErrResponse'
        "404":
          description: Advert not found
          schema:
            $ref: '#/definitions/responses.ErrResponse'
        "500":
          description: Failed to get advert
          schema:
            $ref: '#/definitions/responses.ErrResponse'
      summary: Get an advert by ID
      tags:
      - adverts
    put:
      consumes:
      - application/json
      description: Update an existing advert by its ID
      parameters:
      - description: Advert ID
        in: path
        name: id
        required: true
        type: integer
      - description: Advert data
        in: body
        name: advert
        required: true
        schema:
          $ref: '#/definitions/storage.Advert'
      produces:
      - application/json
      responses:
        "200":
          description: Advert updated successfully
          schema:
            $ref: '#/definitions/storage.Advert'
        "400":
          description: Invalid ID or data
          schema:
            $ref: '#/definitions/responses.ErrResponse'
        "404":
          description: Advert not found
          schema:
            $ref: '#/definitions/responses.ErrResponse'
        "500":
          description: Failed to update advert
          schema:
            $ref: '#/definitions/responses.ErrResponse'
      summary: Update an advert
      tags:
      - adverts
  /check-auth:
    get:
      consumes:
      - application/json
      description: Verify if the current session is valid and the user is authenticated
      produces:
      - application/json
      responses:
        "200":
          description: User is authenticated
          schema:
            $ref: '#/definitions/responses.AuthResponse'
        "400":
          description: Failed to retrieve cookie
          schema:
            $ref: '#/definitions/responses.ErrResponse'
        "401":
          description: No active session or session does not exist
          schema:
            $ref: '#/definitions/responses.ErrResponse'
      summary: Check if user is authenticated
      tags:
      - auth
  /login:
    post:
      consumes:
      - application/json
      description: Login a user with email and password
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AuthResponse'
        "400":
          description: Invalid request body or data
          schema:
            $ref: '#/definitions/responses.ErrResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/responses.ErrResponse'
      summary: Login a user
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      description: Logout a user by invalidating the session
      produces:
      - application/json
      responses:
        "200":
          description: Logged out successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: No active session or session does not exist
          schema:
            $ref: '#/definitions/responses.ErrResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/responses.ErrResponse'
      summary: Logout a user
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: Signup a new user with email and password
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.AuthData'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.AuthResponse'
        "400":
          description: User already exists
          schema:
            $ref: '#/definitions/responses.ErrResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/responses.ErrResponse'
        "500":
          description: Failed to create user
          schema:
            $ref: '#/definitions/responses.ErrResponse'
      summary: Signup a new user
      tags:
      - auth
swagger: "2.0"
