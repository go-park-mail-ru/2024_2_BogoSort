// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/adverts": {
            "get": {
                "description": "Get a list of all adverts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Get all adverts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of adverts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Advert"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid limit or offset",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get adverts",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new advert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Add a new advert",
                "parameters": [
                    {
                        "description": "Advert data",
                        "name": "advert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Advert"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Advert created",
                        "schema": {
                            "$ref": "#/definitions/dto.Advert"
                        }
                    },
                    "400": {
                        "description": "Invalid advert data",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to add advert",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/cart/{cartId}": {
            "get": {
                "description": "Get a list of adverts in the specified cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Get adverts by cart ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cartId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of adverts in cart",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Advert"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid cart ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get adverts by cart ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/category/{categoryId}": {
            "get": {
                "description": "Get a list of adverts by category ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Get adverts by category ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of adverts by category ID",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Advert"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid category ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get adverts by category ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/seller/{sellerId}": {
            "get": {
                "description": "Get a list of adverts by seller ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Get adverts by seller ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Seller ID",
                        "name": "sellerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of adverts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Advert"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid seller ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get adverts by seller ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/user/{userId}/saved": {
            "get": {
                "description": "Get a list of saved adverts by user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Get saved adverts by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of saved adverts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Advert"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get saved adverts by user ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/{advertId}": {
            "get": {
                "description": "Get an advert by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Get an advert by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advert ID",
                        "name": "advertId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advert details",
                        "schema": {
                            "$ref": "#/definitions/dto.Advert"
                        }
                    },
                    "400": {
                        "description": "Invalid advert ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Advert not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get advert by ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an advert's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Update an existing advert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advert ID",
                        "name": "advertId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated advert data",
                        "name": "advert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Advert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advert updated successfully"
                    },
                    "400": {
                        "description": "Invalid advert data",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Advert not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update advert",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an advert by its ID",
                "tags": [
                    "adverts"
                ],
                "summary": "Delete an advert by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advert ID",
                        "name": "advertId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Advert deleted"
                    },
                    "400": {
                        "description": "Invalid advert ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Advert not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete advert",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/{advertId}/image": {
            "put": {
                "description": "Upload an image by ID",
                "tags": [
                    "adverts"
                ],
                "summary": "Upload an image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advert ID",
                        "name": "advertId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image uploaded",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid advert ID or file not attached",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to upload image",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/adverts/{advertId}/status": {
            "put": {
                "description": "Update advert status by ID",
                "tags": [
                    "adverts"
                ],
                "summary": "Update advert status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advert ID",
                        "name": "advertId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advert status updated"
                    },
                    "400": {
                        "description": "Invalid advert ID or status",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Advert not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update advert status",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/static/{staticId}": {
            "get": {
                "description": "Get a static file by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "static"
                ],
                "summary": "Get static file by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Static file ID",
                        "name": "staticId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL of the static file",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid static ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Static file not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get static file",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Advert": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "has_delivery": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "seller_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/dto.AdvertStatus"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.AdvertStatus": {
            "type": "string",
            "enum": [
                "active"
            ],
            "x-enum-varnames": [
                "AdvertStatusActive"
            ]
        },
        "utils.ErrResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
