services:
  auth:
    build:
      context: .
      dockerfile: ./docker/auth.dockerfile
    ports:
      - "50051:50051"
    environment:
      - ENV=production
      - LOG_LEVEL=info
      - CONFIG_PATH=/config/config.yaml
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./config/config.yaml:/config/config.yaml
      - ./static_files:/src/static_files
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=:50051"]
      interval: 30s
      timeout: 10s
      retries: 3

  static:
    build:
      context: .
      dockerfile: ./docker/static.dockerfile
    ports:
      - "50053:50053"
    environment:
      - ENV=production
      - LOG_LEVEL=info
      - CONFIG_PATH=/config/config.yaml
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./config/config.yaml:/config/config.yaml
      - ./static_files:/src/static_files
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=:50053"]
      interval: 30s
      timeout: 10s
      retries: 3

  cart_purchase:
    build:
      context: .
      dockerfile: ./docker/cart_purchase.dockerfile
    ports:
      - "50052:50052"
    environment:
      - ENV=production
      - LOG_LEVEL=info
      - CONFIG_PATH=/config/config.yaml
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./config/config.yaml:/config/config.yaml
      - ./static_files:/src/static_files
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=:50052"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: .
      dockerfile: ./docker/core.dockerfile
    ports:
      - "8080:8080"
    environment:
      - ENV=production
      - CONFIG_PATH=/config/config.yaml
    depends_on:
      auth:
        condition: service_healthy
      static:
        condition: service_healthy
      cart_purchase:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./config/config.yaml:/config/config.yaml
      - ./static_files:/src/static_files

  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=emporiumdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6380:6380"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  pgdata: